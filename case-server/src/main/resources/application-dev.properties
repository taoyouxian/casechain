server.port=2019

# 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
server.undertow.io-threads=4
# 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
server.undertow.worker-threads=60
# 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
# 每块buffer的空间大小,越小的空间被利用越充分
server.undertow.buffer-size=1024
# 每个区分配的buffer数量 , 所以pool的大小是buffer-size * buffers-per-region
server.undertow.buffers-per-region=1024
# 是否分配的直接内存
server.undertow.direct-buffers=true
# 中文乱码
spring.http.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
server.tomcat.uri-encoding=UTF-8

# dbconfig (10.77.40.27:3306, tao, BThhuc)
metadata.db.driver=com.mysql.jdbc.Driver
metadata.db.user=root
metadata.db.password=soul
metadata.db.url=jdbc:mysql://111.231.87.15:3306/case_metadata?useSSL=false&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull

res.path=F:\\Ubuntu\\blockchain\\casechain-samples\\sql\\

// wxconfig
AppID=wx47e35011af6002e5
AppSecret=bf53c02963c9ed868943f11e85b3f496

getOpenId.url=https://api.weixin.qq.com/sns/jscode2session?appid=%s&secret=%s&js_code=%s&grant_type=authorization_code

# 4000 -> 30100
register.url=http://202.121.180.97:30100/users
write.url=http://202.121.180.97:30100/channels/mychannel/chaincodes/mycc
